<?php  
$id = '';
if (!empty($this->zoneconfig['conf']['id']))
    $id = ' id="' .$this->zoneconfig['conf']['id'] . '"';
    $data_melisKey = $this->melisKey;
?>

<div <?= $id; ?> data-melisKey="<?= $data_melisKey; ?>">
	<div class="spacing-x2 innerAll">
			<?php 
			/* 
			 * This functions prepares the TABLE element in HTML. ID and class associative array attribute will be placed in table like
			 * <table id="tableToolProspect" class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs js-table-sortable">
             */
			$this->melisGenericTable()->setTable(array(
			    'id' => 'tableProductList',
			    'class' => 'table table-striped table-primary dt-responsive',
			    'cellspacing' => '0',
			    'width' => '100%'
		     ));
			/**
			 * This process retrieves the value inside the View Model that is being generated from app.tools.php `columns` attribute
			 *  @reference please see app.tools.php
			 */
			$checkBoxCol = '<div class="checkbox checkbox-single check-all" style="width: 30px;">
								<label class="checkbox-custom">
									<i class="fa fa-fw fa-square-o "></i>
									<input type="checkbox" class="check-all">
								</label>
							</div>';
            $columns = array();
            $columnStyle = array();

            foreach($this->tableColumns as $colName => $columnText)
            {
//                 if($colName == 'product_table_checkbox') {
//                     $columns[] = $checkBoxCol;
//                 }
//                 else {
//                     $columns[] = $columnText['text'];
//                 }
                $columns[] = $columnText['text'];

            }

            // this process inserts all the array columns into the table.
            // the 'center' value indicates where your column texts are positioned.
			$this->melisGenericTable()->setColumns($columns);
			
			echo $this->melisGenericTable()->renderTable();
			?>
			<!-- // END TABLE -->
			
			
			<script type="text/javascript">
				// this script cannot be separated to this file since all table configuration and initialization are done here
				// render table to DataTable plugin
				$(function() {	
					<?php echo $this->getToolDataTableConfig; ?>
					$(document).on('column-sizing.dt','#tableProductList', function(e, settings) {
						$("#tableProductList thead tr").find("th:nth-child(6)").css({"width" : "58px"});
						$("#tableProductList thead tr").find("th:nth-child(1)").css({"width" : "1px"});								
						$("#tableProductList thead tr").find("th:nth-child(2)").css({"width" : "1px"});					
						$("#tableProductList .qtipTable thead tr").find("th:nth-child(2)").css({"width" : "62px"});
					});

					$($.fn.dataTable.tables(true)).DataTable()
						.columns.adjust()
						.responsive.recalc();
				});
			</script>
	</div>
</div>